{"name":"Compute","tagline":"An extremely simple reactive programming library using Knockout Observables.","body":"# Compute\r\nAn extremely simple reactive programming library using Knockout style Observables.\r\n\r\nCompute lets you describe relations between different observables. For example,\r\n\r\n    var a = Compute.o();\r\n    var b = Compute.o();\r\n    var c = Compute.from(a, b, function(a1, b1){\r\n      return Math.sqrt(a*a + b*b)\r\n    });\r\n    a(3);\r\n    b(4);\r\n    console.log(c());   // 5\r\n\r\nNow we change a, b\r\n\r\n    a(5);\r\n    b(12);\r\n    console.log(c());   //13\r\n\r\n\r\nTo stop c from being updated, we need to call\r\n\r\n   c.$stop();\r\n\r\n\r\nNow remember knockout subscriptions are only triggered when the value of an observable changes. To force a relation to calculate immediately, we can call $fire like so\r\n\r\n    var x = C.o(7);\r\n    var y = C.o(22);\r\n    var z = C.from(x, y function(x1, y1){\r\n      return y1/x1;\r\n    });\r\n    z(); //undefined, because neither x nor y have changed\r\n    z.$fire();\r\n    z(); //3.14 .... blah ....\r\n\r\nWe can also tell Compute to execute a function everytime an observable changes.\r\n\r\n    Compute.on(c, function(c1){\r\n      console.log(\"C just got set to \" + c1);\r\n    });\r\n\r\nOr, multiple observables\r\n\r\n    Compute.on(a, b, c, function(a1, b1, c1){\r\n      console.log(a1 + \"^2 + \" + b1 + \"^2 = \" + c1 + \"^2\");\r\n    });\r\n\r\nWe also have obervable arrays, and we can define from, and on from them just the same. Or use observables and observable arrays in the same expression.\r\n\r\nIn the browser, Compute will automatically use knockout observables (instead of Compute's implementation) if you are using knockout. Then, you can use C.o and C.oa in your knockout viewmodel because C.o and C.oa are actually ko.observable and ko.observableArray.\r\n\r\nRemember you 'don't have to' use knockout to use Compute, but if you want to, they'll go together like P.B & J.","google":"UA-59108285-1","note":"Don't delete this file! It's used internally to help with page regeneration."}